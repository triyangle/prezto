export TERM="xterm-256color"
export PATH="$HOME/.bin:$PATH"

# Linuxbrew
export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"
export PATH="/home/linuxbrew/.linuxbrew/sbin:$PATH"
export MANPATH="/home/linuxbrew/.linuxbrew/share/man:$MANPATH"
export INFOPATH="/home/linuxbrew/.linuxbrew/share/info:$INFOPATH"
export XDG_DATA_DIRS="/home/linuxbrew/.linuxbrew/share:$XDG_DATA_DIRS"
export PATH=$PATH:/home/linuxbrew.linuxbrew/opt/go/libexec/bin
# export CS61B_LIB_DIR="$HOME/school/CS/61B/CS61B/javalib/*"

function trailing_ws() {
  find . -iname $1 -type f -exec sed -i '' 's/[[:space:]]\{1,\}$//' {} \+
}

alias bt='battery-time'
alias bp='battery-percentage'
alias ssh='TERM=xterm-256color ssh'

export CLASSPATH="$CLASSPATH:$CS61B_LIB_DIR:./"

# Source Prezto.
if [[ -t 0 && -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
export KEYTIMEOUT=1
export HISTCONTROL=ignoreboth

export VIRTUAL_ENV_DISABLE_PROMPT=1

alias tws='trailing_ws'
alias et='expand_tabs'

# fasd settings
alias n='f -e nvim' # quick opening files with nvim
eval "$(fasd --init zsh-hook zsh-ccomp zsh-ccomp-install zsh-wcomp zsh-wcomp-install posix-alias posix-hook)"
bindkey '^X^A' fasd-complete    # C-x C-a to do fasd-complete (files and directories)
bindkey '^X^F' fasd-complete-f  # C-x C-f to do fasd-complete-f (only files)
bindkey '^X^D' fasd-complete-d  # C-x C-d to do fasd-complete-d (only directories)

# Autosuggest settings
# export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=10'
export ZSH_AUTOSUGGEST_STRATEGY=(match_prev_cmd history)

bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^d' kill-word
bindkey '^r' history-incremental-search-backward
bindkey '^k' kill-line
bindkey '^e' end-of-line
bindkey '^a' beginning-of-line

# eval `dircolors ~/.dircolors`
bindkey '^[[1;5D' backward-word
bindkey '^[[1;5C' forward-word

# fzf settings
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_TMUX=0
export FZF_DEFAULT_COMMAND='find .'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

__fselhome() {
  setopt localoptions pipefail 2> /dev/null
  eval "$1 | $(__fzfcmd) -m $FZF_CTRL_T_OPTS" | while read item; do
    echo -n "${(q)item} "
  done
  local ret=$?
  echo
  return $ret
}

__fzfcmd() {
  [ ${FZF_TMUX:-1} -eq 1 ] && echo "fzf-tmux -d${FZF_TMUX_HEIGHT:-40%}" || echo "fzf"
}

fzf-file-widgethome() {
  LBUFFER="${LBUFFER}$(__fselhome "find ~")"
  local ret=$?
  zle redisplay
  typeset -f zle-line-init >/dev/null && zle zle-line-init
  return $ret
}

fzf-file-widgetroot() {
  LBUFFER="${LBUFFER}$(__fselhome "find /")"
  local ret=$?
  zle redisplay
  typeset -f zle-line-init >/dev/null && zle zle-line-init
  return $ret
}

zle     -N   fzf-file-widgethome
bindkey '^ ' fzf-file-widgethome

zle -N fzf-file-widgetroot
bindkey '^_' fzf-file-widgetroot

function expand_tabs() {
  find . -name $1 ! -type d -exec bash -c 'expand -t 4 "$0" > /tmp/e && mv /tmp/e "$0"' {} \;
}

function chpwd() {
  emulate -L zsh
  k
}

# Uncomment to add newline after every command
# precmd() {
#  print ""
# }

source $HOME/dotfiles/submodules/k/k.sh
source $HOME/dotfiles/submodules/zsh-interactive-cd/zsh-interactive-cd.plugin.zsh

export PATH=/usr/local/anaconda3/bin:"$PATH"
